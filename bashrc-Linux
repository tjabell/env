export DISPLAY=:0

export GEM_HOME=$(ruby -e 'print Gem.user_dir')
if which ruby>/dev/null && which gem>/dev/null; then
    # make idempotent by checking path contains gem dir already
    if ruby -rubygems -e 'exit(!ENV["PATH"].include?(Gem.user_dir))'; then
        PATH="$(ruby -rubygems -e 'puts Gem.user_dir')/bin:$PATH"
    fi
fi

man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;246m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}
alias mc='machinectl'
alias gru='git remote update'
alias gru='git remote update'
alias ssheasy='ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=No'
alias scpeasy='scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=No'
alias mosheasy='mosh --ssh="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=No"'
alias workin='ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=No -Y'
alias printpirate='echo -e "\xE2\x98\xA0"'
alias tmux='TERM=xterm-256color tmux'
alias mcls='machinectl list-images'
# http://askubuntu.com/questions/22037/aliases-not-available-when-using-sudo
alias sudo='sudo '
alias emacsq='emacs -Q -nw'
alias se='scu start emacs'
alias mcs='sudo machinectl start '
alias xclips='xclip -selection clipboard'

# mkcd function - creates a directory if it doesn't exist and cd's into it
mkcd () {
  case "$1" in
    */..|*/../) cd -- "$1";; # that doesn't make any sense unless the directory already exists
    /*/../*) (cd "${1%/../*}/.." && mkdir -p "./${1##*/../}") && cd -- "$1";;
    /*) mkdir -p "$1" && cd "$1";;
    */../*) (cd "./${1%/../*}/.." && mkdir -p "./${1##*/../}") && cd "./$1";;
    ../*) (cd .. && mkdir -p "${1#.}") && cd "$1";;
    *) mkdir -p "./$1" && cd "./$1";;
  esac
}

# catls - either list a directory or cat a file
catls()
{
  [[ -f "$1" ]] && cat "$1" || ls "$1";
}

alias cl=catls

# Tmux Plugin Manager
if [[ ! -a ~/.tmux/plugins/tpm ]] ; then
    [[ -x /usr/bin/git ]] && git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm;
fi

function start-machine { m="$1"; sudo machinectl start "$m" && sleep 2 && sudo machinectl login "$m"; }

function tm {
  TMUXNAME=${1:-"default"}

  if tmux ls | grep "^$TMUXNAME:"; then
    tmux attach -d -t $TMUXNAME
  else
    tmux new -s $TMUXNAME
  fi
}

